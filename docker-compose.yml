services:
  # PostgreSQL Database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: cc_db
    environment:
      POSTGRES_DB: contextcleanse
      POSTGRES_USER: contextcleanse
      POSTGRES_PASSWORD: contextcleanse_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - app_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: app  # Use the optimized production stage
      cache_from:
        - cc_backend:latest
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: cc_backend:latest
    container_name: cc_backend
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data:ro  # Mount spambase data as read-only
    environment:
      - DATABASE_URL=postgresql://contextcleanse:contextcleanse_password@postgres:5432/contextcleanse
      - ENVIRONMENT=development
    depends_on:
      - postgres
    networks:
      - app_network
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./backend/app
          target: /app/app
          ignore:
            - __pycache__/
            - "*.pyc"
        - action: rebuild
          path: ./backend/requirements.txt

  # NextJS Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development  # Use development stage for local development
      cache_from:
        - cc_frontend:latest
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: cc_frontend:latest
    container_name: cc_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - INTERNAL_API_URL=http://backend:8000
      # NextAuth Configuration
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=contextcleanse-secure-jwt-secret-2024-development-only
      # OAuth Provider Credentials
      - AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
      - AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
      # reCAPTCHA Configuration
      - NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${NEXT_PUBLIC_RECAPTCHA_SITE_KEY}
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      # Ollama Configuration for host access
      - NEXT_PUBLIC_OLLAMA_HOST=host.docker.internal:11434
    depends_on:
      - backend
    networks:
      - app_network
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./frontend/app
          target: /app/app
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
            - .next/
            - "*.log"
        - action: rebuild
          path: ./frontend/package.json

  # Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: cc_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16