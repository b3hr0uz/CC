services:
  # PostgreSQL Database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: cc_db
    environment:
      POSTGRES_DB: spam_detection
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    networks:
      - app_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      x-bake:
        - buildkit
    container_name: cc_backend
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data:ro  # Mount spambase data as read-only
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/spam_detection
      - ENVIRONMENT=development
    depends_on:
      - postgres
    networks:
      - app_network
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./backend/app
          target: /app/app
          ignore:
            - __pycache__/
            - "*.pyc"
        - action: rebuild
          path: ./backend/requirements.txt

  # NextJS Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      x-bake:
        - buildkit
    container_name: cc_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - app_network
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./frontend/app
          target: /app/app
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
            - .next/
            - "*.log"
        - action: rebuild
          path: ./frontend/package.json

  # Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: cc_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16